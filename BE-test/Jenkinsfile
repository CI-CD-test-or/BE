pipeline {
    // 1. Pod 템플릿 지정 및 옵션 추가
    agent { label 'jenkins-agent' }

    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
        timeout(time: 30, unit: 'MINUTES')
    }

    // 2. 환경 변수 재구성
    environment {
        HARBOR_REGISTRY      = '192.168.56.12:30443'
        HARBOR_PROJECT       = 'cicd-apps'
        DOCKER_IMAGE_NAME    = 'backend-app'
        HARBOR_CREDENTIAL_ID = 'harbor-credential'
        PROJECT_DIR          = 'BE-test'
    }

    stages {
        stage('Checkout') {
            steps {
                cleanWs()
                checkout scm
            }
        }

        stage('Build with Gradle') {
            steps {
                container('gradle') {
                    dir(PROJECT_DIR) {
                        sh 'chmod +x gradlew'
                        sh './gradlew build --no-daemon'
                    }
                }
            }
        }

        stage('Build and Push with Kaniko') {
            steps {
                container('kaniko') {
                    script {
                        withCredentials([usernamePassword(
                            credentialsId: HARBOR_CREDENTIAL_ID,
                            usernameVariable: 'HARBOR_USER',
                            passwordVariable: 'HARBOR_PASS'
                        )]) {
                            // Harbor 인증을 위한 config.json 생성
                            sh """
                                echo '{"auths":{"${HARBOR_REGISTRY}":{"username":"${HARBOR_USER}","password":"${HARBOR_PASS}"}}}' > /kaniko/.docker/config.json
                            """

                            // ✅ [수정] Kaniko가 신뢰하는 전용 경로에 디렉터리를 만들고 인증서를 복사합니다.
                            sh 'mkdir -p /kaniko/ssl/certs'
                            sh 'cp /usr/local/share/ca-certificates/harbor/harbor.crt /kaniko/ssl/certs/harbor-ca.crt'
                            
                            // Kaniko 실행 (인증서 관련 옵션은 이제 필요 없습니다)
                            sh """
                                /kaniko/executor \\
                                    --context \$(pwd)/${PROJECT_DIR} \\
                                    --dockerfile \$(pwd)/${PROJECT_DIR}/Dockerfile \\
                                    --destination ${HARBOR_REGISTRY}/${HARBOR_PROJECT}/${DOCKER_IMAGE_NAME}:${BUILD_NUMBER} \\
                                    --cache=true --cache-repo ${HARBOR_REGISTRY}/${HARBOR_PROJECT}/cache
                            """
                        }
                    }
                }
            }
        }
    }

    // 빌드 후 정리 작업
    post {
        always {
            cleanWs()
            echo 'Pipeline finished. Workspace cleaned up.'
        }
    }
}
